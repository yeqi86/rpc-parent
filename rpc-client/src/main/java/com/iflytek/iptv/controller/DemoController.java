package com.iflytek.iptv.controller;import com.iflytek.iptv.api.DemoApi;import com.iflytek.iptv.dto.EventMsg;import com.iflytek.sdk.client.rpc.RpcServiceFactory;import com.iflytek.sdk.client.transfer.FileTransferClient;import com.iflytek.sdk.client.websocket.WebsocketClient;import com.iflytek.sdk.dto.RequestFile;import com.iflytek.sdk.exception.ClassNotQualifiedException;import com.iflytek.sdk.util.MD5FileUtil;import io.netty.channel.Channel;import io.netty.handler.codec.http.websocketx.TextWebSocketFrame;import lombok.extern.slf4j.Slf4j;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import org.springframework.web.bind.annotation.ResponseBody;import org.springframework.web.bind.annotation.RestController;import java.io.File;import java.net.URISyntaxException;/** * Created by Administrator on 2019/4/24. */@Slf4j@RestControllerpublic class DemoController {    Channel channel;    /**     * demo     */    @RequestMapping(value = "/getTest/demo", method = RequestMethod.GET)    @ResponseBody    public void listPage(String time) throws ClassNotQualifiedException {        DemoApi api  =  RpcServiceFactory.getClass(DemoApi.class,"127.0.0.1:1232");        //  ServerTransferApi api  =  RpcServiceFactory.getClass(ServerTransferApi.class,"127.0.0.1:1321");        EventMsg msg = new EventMsg();        msg.setName("xunfei00040002");        msg.setMsg("/home/lc/1.原始资源/未上线/其他/xunfei00040002.mp4");         api.sendMsg(msg);        return;    }    @RequestMapping(value = "/getTest/demo2", method = RequestMethod.GET)    @ResponseBody    public void listPage2(String time) throws ClassNotQualifiedException, URISyntaxException, InterruptedException {        if(channel == null || !channel.isActive()) {            channel = WebsocketClient.connectToServer("http://127.0.0.1:1232?665887");        }        TextWebSocketFrame frame = new TextWebSocketFrame("你好\r\n");        channel.writeAndFlush(frame);        return;    }    @RequestMapping(value = "/getTest/demo3", method = RequestMethod.GET)    @ResponseBody    public void listPage3(String time) throws ClassNotQualifiedException, URISyntaxException, InterruptedException {        if(channel == null || !channel.isActive()) {            channel = WebsocketClient.connectToServer("http://127.0.0.1:1232?665887");        }        TextWebSocketFrame frame = new TextWebSocketFrame("你好\r\n");        channel.writeAndFlush(frame);        return;    }    @RequestMapping(value = "/getTest/demo4", method = RequestMethod.GET)    @ResponseBody    public void listPage4(String path) throws ClassNotQualifiedException, URISyntaxException, InterruptedException {        try {            RequestFile echo = new RequestFile();            // File file = new File("D:\\ffmpeg_124162.rar");  //  "D://files/xxoo"+args[0]+".amr"            File file = new File("D:\\"+path);  //  "D://files/xxoo"+args[0]+".amr"            // File file = new File("D:\\小学英语随堂练原型-20201207\\音频媒资-20220105.7z");  //  "D://files/xxoo"+args[0]+".amr"            String fileName = file.getName();// 文件名            echo.setFile(file);            echo.setFile_md5(MD5FileUtil.getFileMD5String(file));            echo.setFile_name(fileName);            echo.setFile_type(fileName.substring(fileName.lastIndexOf("."), fileName.length()));            echo.setStarPos(0);// 文件开始位置            new FileTransferClient().connect(1232, "127.0.0.1", echo);        } catch (Exception e) {            e.printStackTrace();        }        return;    }}